a =  11
a
b <- 2
b
a + b -> c
c
20+ a -> c
c
c
c
c<-123
type(c)
c.type()
typeof(c)
typeof(a)
d<- as.character(c)
d
typeof(d)
is.character(d)
is.character(c)
a =12.0
\
a =12.0
typeof(a)
a = 1+3i
typeof(a)
a =1
typeof(a)
as.integer(123)
x = as.integer(123)
x
typeof(x)
y = 1234
typeof(y)
a = 1+3i
typeof(a)
a = TRUE
typeof(a)
a = FALSE
typeof(a)
is.null(a)
a = None
d<- as.character(c)
is.character(c)# [1] FALSE
is.numeric(c) # [1] TRUE
is.characterc(d)# [1] TRUE
installed.packages()
install.packages
install.packages("nutshell")
vector_numerical = c(6,7,8)
typeof(vector_numerical)
length(vector_numerical)
vector_logical = c(TRUE,FALSE,FALSE)
vector_logical = c(TRUE,FALSE,FALSE)
typeof(vector_logical) # Result [1] "logical"
vector_strings = c("aa","bb","cc")
vector_strings = c("aa","bb","cc")
typeof(vector_strings)
vector_complex = c(1+2i, 2+3i,3+4i,"123")
typeof(vector_complex) # Result  [1] "complex"
vector_complex = c(1+2i, 2+3i,3+4i,TRUE)
typeof(vector_complex) # Result  [1] "complex"
vector_complex = c(1+2i, 2+3i,3+4i,TRUE)
typeof(vector_complex) # Result  [1] "complex"
vector_complex = c(1+2i, 2+3i,3+4i,12)
typeof(vector_complex)
m =c(6,7,8,9)
n =c(1,2,3,4,5)
o = c(m,n)
o
Q= c("aa","bb","cc")
P= c(1,2,3)
R  = c(Q,P)
typeof(R)
a = c(1,2,3,4,5)
b = c(4,5,6,7)
a*b #Multiply # Result [1]  4 10 18 28 20
a+b #Add # Result [1]  5  7  9 11  9
a-b
b-a #Subtract Result [1]  3  3  3  3 -1
a/b
a%%b #Modulus Result [1] 1 2 3 4 1
b%%a #Modulus Result [1] 0 1 0 3 4
#Relational Operators
a =c(1,2,3,4,5)
b = c(4,5,6,7)
a>b # Result [1] FALSE FALSE FALSE FALSE  TRUE
b>a # Result [1]  TRUE  TRUE  TRUE  TRUE FALSE
a==b# Result [1] FALSE FALSE FALSE FALSE FALSE
a<=b# Result [1]  TRUE  TRUE  TRUE  TRUE FALSE
a>=b# Result [1] FALSE FALSE FALSE FALSE  TRUE
a!=b# Result [1] TRUE TRUE TRUE TRUE TRUE
x <- c(0, 1, TRUE, 2+3i)
y <- c(2,1,FALSE, 2+3i)
x&y
x <- c(1, 1, TRUE, 2+3i)
y <- c(2,1,FALSE, 2+3i)
x&y #Result [1]  TRUE  TRUE FALSE  TRUE
x <- c(0,0, TRUE, FALSE,2+2i)
y <- c(1,0, FALSE, FALSE,2+3i)
x | y #Result  [1]  TRUE FALSE  TRUE FALSE  TRUE
x <- c (FALSE, 3,0, TRUE, 2+2i)
!x #Result [1]  TRUE FALSE TRUE FALSE FALSE
x <- c(3,0,TRUE,2+2i)
y <- c(1,3,TRUE,2+3i)
a <- c(FALSE, FALSE,1)
b <- c(TRUE,TRUE,0)
e <- c(FALSE, FALSE,1)
f <- c(TRUE,TRUE,0)
x&&y # Result [1] TRUE
x&&y # Result [1] TRUE
a&&b # Result [1] FALSE
e&&f # Result [1] FALSE
x||y
a||b
e <- c(FALSE, FALSE,0)
f <- c(FALSE, FALSE,0)
e <- c(TRUE, FALSE,0)
f <- c(FALSE, FALSE,0)
e||f
e <- c(FALSE, FALSE,0)
f <- c(FALSE, FALSE,0)
e|f
a|b
a|b
a||b
x|y
x||y
#Indexing Vectors
a <- c(1,2,3,4,5,6,6,7,7,8,9)
a1 <- c(2,1,TRUE, 2+3i)
a2 <<- c(2,1,TRUE, 2+3i)
a3 = c(2,1, TRUE, 2+3i)
c(2,1, TRUE, 2+3i) -> a4
a1
a2
a3
a4
c(2,1, TRUE, 2+3i) ->> a5
a5
a <- c(1,2,3,4,5,6,6,7,7,8,9)
a[0]
a[1]
a[8]
a[1:3]
a[3:7]  # Result [1] 3 4 5 6 6 # Value Between Two Sequences
a[-9]
a[-5:-1]
a[-5:-1]
a[-1:-6]
a
a[-1:-6]
a[-5:-1]
a[-5:-1]
a[-1:-6]
a[c(-1,-2,-4,-5)]
a[c(-1,-4,-5)]
Vector_bool = c(TRUE, FALSE, TRUE , TRUE, FALSE)
Vector_any = c("JOHN", "MIKE", "PETE", "WeSCHE","SEBASTIN")
Vector_any[Vector_bool]
Vector_languages =c("Python","R Language", "Java", "C#")
Vector_bool = c(FALSE, TRUE , FALSE,TRUE, TRUE)
Vector_languages[Vector_bool] # Result [1] "R Language" "C#"         NA
languages = c("Python","R Language", "Java", "C#")
names(languages) = c("Best", "Very Best", "Good", "Mediocre")
languages
Vector_languages =c("Python","R Language", "Java", "C#")
Vector_languages =c("Python","R Language", "Java", "C#")
languages = c("Python","R Language", "Java", "C#")
languages
names(languages) = c("Best", "Very Best", "Good", "Mediocre")
languages
languages["Good"]
languages["Very Best"] #Result Very Best
